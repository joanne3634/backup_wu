<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 


<mapper namespace="com.deelon.loan.model.front.TuserLoginlog">

	<resultMap id="TuserLoginlog" type="com.deelon.loan.model.front.TuserLoginlog">	
        <id property="loginLogId" column="LoginLog_id" />
        <result property="userId" column="user_id"/>
        <result property="typeId" column="TypeID"/>
        <result property="platformId" column="PlatformID"/>
        <result property="clientIp" column="ClientIP"/>
        <result property="deviceId" column="DeviceID"/>
        <result property="actionTime" column="ActionTime"/>
        <result property="resultId" column="ResultID"/>
        <result property="remarks" column="Remarks"/>
	</resultMap>
	
	<sql id="columns">
		LoginLog_id,user_id,TypeID,PlatformID,ClientIP,DeviceID,ActionTime,ResultID,Remarks
	</sql>
	<sql id="dynamicWhere">			
	       <if test="@Ognl@isNotEmpty(loginLogId)">AND LoginLog_id = #{loginLogId}</if>
	       <if test="@Ognl@isNotEmpty(userId)">AND user_id = #{userId}</if>
	       <if test="@Ognl@isNotEmpty(typeId)">AND TypeID = #{typeId}</if>
	       <if test="@Ognl@isNotEmpty(platformId)">AND PlatformID = #{platformId}</if>
	       <if test="@Ognl@isNotEmpty(clientIp)">AND ClientIP = #{clientIp}</if>
	       <if test="@Ognl@isNotEmpty(deviceId)">AND DeviceID = #{deviceId}</if>
	       <if test="@Ognl@isNotEmpty(actionTimeBegin)">AND ActionTime >= #{actionTimeBegin}</if>
		   <if test="@Ognl@isNotEmpty(actionTimeEnd)">AND ActionTime &lt;= #{actionTimeEnd}</if>
	       <if test="@Ognl@isNotEmpty(resultId)">AND ResultID = #{resultId}</if>
	       <if test="@Ognl@isNotEmpty(remarks)">AND Remarks = #{remarks}</if>
	</sql>
	<insert id="add" parameterType="com.deelon.loan.model.front.TuserLoginlog">
		INSERT INTO t_user_loginlog
		(<include refid="columns"/>)
		VALUES
		(#{loginLogId} ,#{userId} ,#{typeId} ,#{platformId} ,#{clientIp} ,#{deviceId} ,#{actionTime} ,#{resultId} ,#{remarks}  )
    </insert>

    <delete id="delById" parameterType="java.lang.Long">
		DELETE FROM t_user_loginlog 
		WHERE
        LoginLog_id = #{id} 
	</delete>
	
	<update id="update" parameterType="com.deelon.loan.model.front.TuserLoginlog">
		UPDATE t_user_loginlog SET
	        user_id = #{userId} ,
	        TypeID = #{typeId} ,
	        PlatformID = #{platformId} ,
	        ClientIP = #{clientIp} ,
	        DeviceID = #{deviceId} ,
	        ActionTime = #{actionTime} ,
	        ResultID = #{resultId} ,
	        Remarks = #{remarks} 
        WHERE 
	        LoginLog_id = #{loginLogId} 
	</update>
    
    <select id="getById" parameterType="java.lang.Long" resultMap="TuserLoginlog">
		SELECT <include refid="columns"/>
		FROM t_user_loginlog 
		WHERE 1=1
		LoginLog_id = #{id} 
	</select>
	
	<select id="getAll" resultMap="TuserLoginlog">
		SELECT <include refid="columns"/>
		FROM t_user_loginlog   
		WHERE 1=1 
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by orderField orderSeq
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by LoginLog_id  desc
		</if>
	</select>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM t_user_loginlog 
		<include refid="dynamicWhere" />   
    </select>   

	
</mapper>


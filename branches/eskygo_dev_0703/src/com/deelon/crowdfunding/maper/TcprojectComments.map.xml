<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 


<mapper namespace="com.deelon.crowdfunding.model.backstage.TcprojectComments">

	<resultMap id="TcprojectComments" type="com.deelon.crowdfunding.model.backstage.TcprojectComments">	
	

        <id property="commentsId" column="Comments_id" />
        <result property="projectId" column="Project_id"/>
		  <result property="pctypeID" column="PC_TypeID"/> 
		 <result property="pcparentD" column="PC_ParentD"/>
        <result property="pccontent" column="PC_Content"/>
        <result property="creator" column="Creator"/>
        <result property="creteTime" column="CreteTime"/>
        
		  <result property="creatorName" column="CreatorName"/>
		  <result property="creatorLoginName" column="creatorLoginName"/> 
		   <result property="loginName" column="LoginName"/> 
		  <collection property="listProComments" ofType="com.deelon.crowdfunding.model.backstage.TcprojectComments" 
		  select="getWriteBackCon" column="Comments_id">
		  <result property="writeBackCreator" column="LoginName"/>
		  <result property="writeBackContents" column="PC_Content"/> 
		  <result property="writeBackDate" column="CreteTime"/>  
		  </collection>
	</resultMap>
	
	<sql id="columns">
		Comments_id,Project_id,PC_Content,PC_TypeID,PC_ParentD,Creator,CreteTime
	</sql>
	<sql id="dynamicWhere">			
	       <if test="@Ognl@isNotEmpty(commentsId)">AND Comments_id = #{commentsId}</if>
	       <if test="@Ognl@isNotEmpty(projectId)">AND Project_id = #{projectId}</if>
	       <if test="@Ognl@isNotEmpty(pccontent)">AND PC_Content = #{pccontent}</if>
	       <if test="@Ognl@isNotEmpty(creator)">AND Creator = #{creator}</if>
	       <if test="@Ognl@isNotEmpty(creteTimeBegin)">AND CreteTime >= #{creteTimeBegin}</if>
		   <if test="@Ognl@isNotEmpty(creteTimeEnd)">AND CreteTime &lt;= #{creteTimeEnd}</if>
		    <if test="@Ognl@isNotEmpty(pctypeID)">AND PC_TypeID &lt;= #{pctypeID}</if>
		     <if test="@Ognl@isNotEmpty(pcparentD)">AND PC_ParentD &lt;= #{pcparentD}</if>
		 
	</sql>
	<insert id="add" parameterType="com.deelon.crowdfunding.model.backstage.TcprojectComments">
		INSERT INTO t_c_project_comments
		(<include refid="columns"/>)
		VALUES
		(#{commentsId} ,#{projectId} ,#{pccontent} ,#{pctypeID} ,#{pcparentD} ,#{creator} ,#{creteTime}  )
    </insert>

    <delete id="delById" parameterType="java.lang.Long">
		DELETE FROM t_c_project_comments 
		WHERE
        Comments_id = #{id} 
	</delete>
	
	<update id="update" parameterType="com.deelon.crowdfunding.model.backstage.TcprojectComments">
		UPDATE t_c_project_comments SET
	        Project_id = #{projectId} ,
	        PC_Content = #{pccontent} ,
	        PC_TypeID = #{pctypeID} ,
	        PC_ParentD = #{pcparentD} ,
	        Creator = #{creator} ,
	        CreteTime = #{creteTime} 
        WHERE 
	        Comments_id = #{commentsId} 
	</update>
    
    <select id="getById" parameterType="java.lang.Long" resultMap="TcprojectComments">
		SELECT <include refid="columns"/>
		FROM t_c_project_comments 
		WHERE 1=1 and
		Comments_id = #{id} 
	</select>
	
	<select id="getAll" resultMap="TcprojectComments">
		SELECT <include refid="columns"/>
		FROM t_c_project_comments   
		WHERE 1=1 
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by orderField orderSeq
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by Comments_id  desc
		</if>
	</select>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM t_c_project_comments 
		<include refid="dynamicWhere" />   
    </select>   

	<select id="getTcprojectCommentsByProId" resultMap="TcprojectComments">
		SELECT cc.*,<!-- tu.RealName as PC_Reply,tu.LoginName, -->tu1.RealName as CreatorName,tu1.LoginName as creatorLoginName 
		FROM t_c_project_comments cc
		<!-- left join t_c_project pj on cc.Project_id=pj.Project_id -->
		 <!-- left join T_User tu on cc.PC_Reply=tu.user_id -->
		left join T_User tu1 on cc.Creator=tu1.user_id
		WHERE 1=1 and cc.Project_id=#{projectId} and cc.PC_ParentD=0
		order by cc.CreteTime desc
	</select>
	
	<select id="getWriteBackCon" resultMap="TcprojectComments">
	SELECT cc.*,tu.LoginName
		FROM t_c_project_comments cc
		left join T_User tu on cc.Creator=tu.user_id
		where cc.PC_ParentD=#{pcparentD} order by cc.CreteTime 
	</select>
	
	<select id="getCount" resultMap="TcprojectComments">
	select Comments_id,count(Comments_id) as count from t_c_project_comments where PC_ParentD=#{commentsId} 
	</select>
	
	<select id="getByCommentsId" parameterType="java.lang.Long" resultMap="TcprojectComments">
		SELECT <include refid="columns"/>
		FROM t_c_project_comments 
		WHERE 1=1 and
		PC_ParentD = #{commentsId}
	</select>
</mapper>


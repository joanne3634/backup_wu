<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 


<mapper namespace="com.deelon.loan.model.aboutus.TUserSuccessstory">
	<resultMap id="TUserSuccessstory" type="com.deelon.loan.model.aboutus.TUserSuccessstory">	
        <id property="successstoryId" column="SuccessStory_id" />
        <result property="userId" column="user_id"/>
        <result property="subject" column="Subject"/>
        <result property="shareContent" column="ShareContent"/>
        <result property="creator" column="Creator"/>
        <result property="createTime" column="CreateTime"/>
        <result property="groupId" column="GroupID"/>
	</resultMap>
	
	<sql id="columns">
		SuccessStory_id,su.user_id,Subject,ShareContent,Creator,CreateTime
	</sql>
	<sql id="dynamicWhere">			
	       <if test="@Ognl@isNotEmpty(successstoryId)">AND SuccessStory_id = #{successstoryId}</if>
	       <if test="@Ognl@isNotEmpty(userId)">AND user_id = #{userId}</if>
	       <if test="@Ognl@isNotEmpty(subject)">AND Subject like '%${subject}%'</if>
	       <if test="@Ognl@isNotEmpty(shareContent)">AND ShareContent = #{shareContent}</if>
	       <if test="@Ognl@isNotEmpty(creator)">AND Creator = #{creator}</if>
	       <if test="@Ognl@isNotEmpty(createTime)">AND CreateTime = #{createTime}</if>
	       <if test="@Ognl@isNotEmpty(groupId)">AND us.GroupID = #{groupId}</if>
	</sql>
	<insert id="add" parameterType="com.deelon.loan.model.aboutus.TUserSuccessstory">
		INSERT INTO t_user_successstory
		(SuccessStory_id,user_id,Subject,ShareContent,Creator,CreateTime)
		VALUES
		(#{successstoryId} ,#{userId} ,#{subject} ,#{shareContent} ,#{creator} ,#{createTime})
    </insert>

    <delete id="delById" parameterType="java.lang.Long">
		DELETE FROM t_user_successstory 
		WHERE
        SuccessStory_id = #{id} 
	</delete>
	
	<update id="update" parameterType="com.deelon.loan.model.aboutus.TUserSuccessstory">
		UPDATE t_user_successstory SET
			user_id = #{userId} ,
			Subject = #{subject} ,
			ShareContent = #{shareContent} ,
			Creator = #{creator} ,
			CreateTime = #{createTime} 
        WHERE 
	        SuccessStory_id = #{successstoryId} 
	</update>
    
    <select id="getById" parameterType="java.lang.Long" resultMap="TUserSuccessstory">
		SELECT <include refid="columns"/>
		FROM t_user_successstory su
		WHERE 1=1 and
		SuccessStory_id = #{id} 
	</select>
	
	  <select id="getByUserId" parameterType="java.lang.Long" resultMap="TUserSuccessstory">
		SELECT <include refid="columns"/>
		FROM t_user_successstory su
		WHERE 1=1 and
		user_id = #{userId} 
	</select>
	
	<select id="getAll" resultMap="TUserSuccessstory">
		SELECT <include refid="columns"/>,us.GroupID
		FROM t_user_successstory su LEFT JOIN t_user us ON su.user_id=us.user_id
		WHERE 1=1 
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by orderField orderSeq
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by SuccessStory_id  desc
		</if>
	</select>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM t_user_successstory 
		<include refid="dynamicWhere" />   
    </select>   

</mapper>

